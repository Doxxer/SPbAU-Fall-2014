/*
 * generated by Xtext
 */
package ru.spbau.turaev.depgraph.generator

import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.IGenerator
import org.eclipse.xtext.generator.IFileSystemAccess
import ru.spbau.turaev.depgraph.myDsl.Person
import ru.spbau.turaev.depgraph.myDsl.NoRelationships
import ru.spbau.turaev.depgraph.myDsl.RelationshipDescription
import org.eclipse.emf.ecore.EObject

/**
 * Generates code from your model files on save.
 * 
 * see http://www.eclipse.org/Xtext/documentation.html#TutorialCodeGeneration
 */
class MyDslGenerator implements IGenerator {
	
	override void doGenerate(Resource resource, IFileSystemAccess fsa) {
		fsa.generateFile('Relationships.java', 
			resource.allContents
				.filter(typeof(Person))
				.map[compile]
				.join('\n\n'))
	}
	
	dispatch def compile(Person p) '''
		class «p.name» {
			public List<Class> getDependencies() {
				return «p.rels.compile»;
			}
		}
	'''
	
	dispatch def compile(NoRelationships rels) '''Collections.emptyList()'''
	
	dispatch def compile(RelationshipDescription rels) '''
		Arrays.asList(«rels.rel.map[it | it.name + ".class"].join(', ')»)'''
}
