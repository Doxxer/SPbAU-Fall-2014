package stopwatch.lang.structure;

/*Generated by MPS */

import java.util.List;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.internal.collections.runtime.backports.LinkedList;

public enum CircleTimesType {
  One("One", "One"),
  No("No", "No"),
  Infinity("Infinity", "Infinity");

  private String myName;

  public String getName() {
    return this.myName;
  }

  public String getValueAsString() {
    return this.myValue;
  }

  public static List<CircleTimesType> getConstants() {
    List<CircleTimesType> list = ListSequence.fromList(new LinkedList<CircleTimesType>());
    ListSequence.fromList(list).addElement(CircleTimesType.One);
    ListSequence.fromList(list).addElement(CircleTimesType.No);
    ListSequence.fromList(list).addElement(CircleTimesType.Infinity);
    return list;
  }

  public static CircleTimesType getDefault() {
    return CircleTimesType.One;
  }

  public static CircleTimesType parseValue(String value) {
    if (value == null) {
      return CircleTimesType.getDefault();
    }
    if (value.equals(CircleTimesType.One.getValueAsString())) {
      return CircleTimesType.One;
    }
    if (value.equals(CircleTimesType.No.getValueAsString())) {
      return CircleTimesType.No;
    }
    if (value.equals(CircleTimesType.Infinity.getValueAsString())) {
      return CircleTimesType.Infinity;
    }
    return CircleTimesType.getDefault();
  }

  private String myValue;

  CircleTimesType(String name, String value) {
    this.myName = name;
    this.myValue = value;
  }

  public String getValue() {
    return this.myValue;
  }
}
