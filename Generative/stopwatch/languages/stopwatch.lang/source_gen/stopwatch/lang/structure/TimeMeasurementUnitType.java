package stopwatch.lang.structure;

/*Generated by MPS */

import java.util.List;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.internal.collections.runtime.backports.LinkedList;

public enum TimeMeasurementUnitType {
  milliseconds("milliseconds", "ms"),
  seconds("seconds", "s"),
  minutes("minutes", "m"),
  hours("hours", "h");

  private String myName;

  public String getName() {
    return this.myName;
  }

  public String getValueAsString() {
    return this.myValue;
  }

  public static List<TimeMeasurementUnitType> getConstants() {
    List<TimeMeasurementUnitType> list = ListSequence.fromList(new LinkedList<TimeMeasurementUnitType>());
    ListSequence.fromList(list).addElement(TimeMeasurementUnitType.milliseconds);
    ListSequence.fromList(list).addElement(TimeMeasurementUnitType.seconds);
    ListSequence.fromList(list).addElement(TimeMeasurementUnitType.minutes);
    ListSequence.fromList(list).addElement(TimeMeasurementUnitType.hours);
    return list;
  }

  public static TimeMeasurementUnitType getDefault() {
    return TimeMeasurementUnitType.seconds;
  }

  public static TimeMeasurementUnitType parseValue(String value) {
    if (value == null) {
      return TimeMeasurementUnitType.getDefault();
    }
    if (value.equals(TimeMeasurementUnitType.milliseconds.getValueAsString())) {
      return TimeMeasurementUnitType.milliseconds;
    }
    if (value.equals(TimeMeasurementUnitType.seconds.getValueAsString())) {
      return TimeMeasurementUnitType.seconds;
    }
    if (value.equals(TimeMeasurementUnitType.minutes.getValueAsString())) {
      return TimeMeasurementUnitType.minutes;
    }
    if (value.equals(TimeMeasurementUnitType.hours.getValueAsString())) {
      return TimeMeasurementUnitType.hours;
    }
    return TimeMeasurementUnitType.getDefault();
  }

  private String myValue;

  TimeMeasurementUnitType(String name, String value) {
    this.myName = name;
    this.myValue = value;
  }

  public String getValue() {
    return this.myValue;
  }
}
